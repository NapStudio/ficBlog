<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">


	<context:annotation-config />
	<context:component-scan base-package="asi.ficblog" />
	<mvc:annotation-driven />
	<tx:annotation-driven />

	<!-- Data Source -->
	<bean id="dataSourceBean" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/asi" />
		<property name="username" value="postgres" />
		<property name="password" value="123456" />
	</bean>

	<!-- JBDC Template -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSourceBean" />
	</bean>

	<!-- Transaction management -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceBean" />
	</bean>

	<!-- Tiles configuration -->
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />

	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- View Resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- Web resources (CSS, img, etc.) -->
	<mvc:resources mapping="/resources/**" location="/resources/"
		cache-period="31556926" />

	<!-- Internationalization -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en_EN" />
	</bean>

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
	</mvc:interceptors>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
	</bean>

	<!-- Authentication -->

	<!-- enable use-expressions -->
	<sec:http auto-config="true" use-expressions="true">

		<sec:intercept-url pattern="/blog/**"
			access="hasRole('ROLE_AUTHENTICATED')" />

		<sec:intercept-url pattern="/usuario/**"
			access="hasRole('ROLE_AUTHENTICATED')" />

		<!-- access denied page -->
		<sec:access-denied-handler error-page="/403" />

		<sec:form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/login?error" username-parameter="login_usuario"
			password-parameter="contrasinal_usuario" />

		<sec:logout logout-url="/logout" logout-success-url="/" />

		<!-- enable CSRF protection -->
		<sec:csrf />
	</sec:http>

	<!-- Select users and user_roles from database -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:jdbc-user-service id="userService"
				data-source-ref="dataSourceBean"
				users-by-username-query="SELECT login_usuario, contrasinal_usuario, enabled FROM usuario WHERE login_usuario = ?"
				authorities-by-username-query="SELECT login_usuario, role FROM UserRoles WHERE login_usuario = ?" />
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>